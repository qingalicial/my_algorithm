#递归法求和
def sum(number):
    if len(number)==1:
        return number[0]
    else:
        return number[0] + sum(number[1:])
    
print(sum([1,3,5,7,9]))


def sum(number):
    the_sum=0
    for i in number:
        the_sum=the_sum+i
    return the_sum
    
##将数字转为字符
def to_str(n,base):
    convert_string="0123456789ABCDEF"
    if n < base:
        return convert_string[n]
    else:
        return to_str(n/base,base)+convert_string[n%base]
    
print(to_str(1453,16))
print(to_str(1453,10))



##画迷宫
import turtle

myTurtle=turtle.Turtle()
myWin=turtle.Screen()
def drawSpiral(myTurtle,lineLen):
    if lineLen > 0:
        myTurtle.forward(lineLen)
    myTurtle.right(90)
    drawSpiral(myTurtle,lineLen-5)
    
drawSpiral(myTurtle,100)
myWin.exitonclick()


##画树
import turtle
def tree(branchLen,t):
    if branchLen > 5:
        t.forward(branchLen)
        t.right(20)
        tree(branchLen-15,t)
        t.left(40)
        tree(branchLen-10,t)
        t.right(20)
        t.backward(branchLen)
        
def main():
    t=turtle.Turtle()
    myWin=turtle.Screen()
    t.left(90)
    t.up()
    t.backward(100)
    t.down()
    t.color("green")
    tree(75,t)
    myWin.exitonclick()
    
main()
    
    
